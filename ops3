 
(U) Tactics/Techniques/Procedures:
	· NoName(057)16’s DDoSia Project’s gets an upgrade
			o https://securityaffairs.com/148167/hacking/ddosia-attack-tool-upgrade.html
			o https://decoded.avast.io/martinchlumecky/ddosia-project-how-noname05716-is-trying-to-improve-the-efficiency-of-ddos-attacks/
Article Summary:
The article discusses the upgraded version of the DDoSia attack tool, developed by the pro-Russia collective NoName(057)16, and its recent activities targeting Ukraine, NATO countries, and other nations supporting Ukraine. Notably, the latest version of the tool, written in Golang, introduces a new security mechanism to conceal the list of targets.

Key Points:

    Threat Actor: NoName(057)16, a pro-Russia collective, has developed and employed the upgraded DDoSia attack tool.
    Targets: The tool has been used in attacks against Ukraine, NATO countries, and nations that support Ukraine politically, militarily, and economically.
    Tool Upgrade: The latest version of DDoSia is written in Golang and features a new security mechanism to hide the list of targets.
    Communication: NoName(057)16 utilizes Telegram channels, including one in Russian and another in English, with a significant number of subscribers (45,000+).
    Operational Expansion: The group aims to make the malware compatible with multiple operating systems, suggesting their intent to broaden their victim pool.

Analysis and Implications:
NoName(057)16's continuous development of the DDoSia tool and their efforts to enhance its security indicate a proactive approach to maintaining their capabilities. The increased scrutiny from the CTI community and the group's active community may be driving these developments. Therefore, it is likely that we will witness further advancements in the short term.

DDOS & C2
    Tactic: Impact (Impact/Destruction)
        Technique: DDoS (T1498)
            Description: Launching Distributed Denial of Service (DDoS) attacks to disrupt or disable target systems, applications, or networks.

    Tactic: Command and Control (C2)
        Technique: Web Service (T1102)
            Description: Using web services for C2 communication, such as utilizing HTTP/HTTPS protocols to interact with C2 servers.
        Technique: Commonly Used Port (T1043)
            Description: Employing commonly used ports for C2 communication to blend in with legitimate network traffic.
        Technique: Data Encoding (T1132)
            Description: Encoding C2 traffic to evade detection or bypass security controls.
        Technique: Standard Application Layer Protocol (T1071)
            Description: Utilizing standard application layer protocols (e.g., HTTP, DNS) for C2 communications to appear as normal network traffic.
        Technique: Custom Command and Control Protocol (T1094)
            Description: Developing custom protocols for C2 communications to evade signature-based detection.
        Technique: Non-Standard Port (T1571)
            Description: Using non-standard ports for C2 communication to avoid detection based on typical port usage.


 
(U) Malware:
	· Node.js Users Beware: Manifest Confusion Attack Opens Door to Malware
			o https://thecybersecurity.news/general-cyber-security-news/node-js-users-beware-manifest-confusion-attack-opens-door-to-malware-26756/
Article Summary:
The article highlights a vulnerability in the npm registry for Node.js, known as the Manifest Confusion Attack. This vulnerability allows threat actors to potentially hide malware in task dependencies or execute arbitrary scripts during installation. By exploiting the decoupling of manifest and bundle metadata, attackers can introduce hidden dependencies and perform supply chain attacks, posing a risk to developers' environments.

Key Points:

    Vulnerability: The npm registry for Node.js is susceptible to a Manifest Confusion Attack, enabling the concealment of malware and arbitrary script execution during package installation.
    Manifest and Bundle Decoupling: The mismatch between manifest and bundle metadata, without cross-referencing, leads to unexpected behavior and misuse of packages.
    Supply Chain Attack: Threat actors can publish modules with manipulated manifest files containing hidden dependencies and malicious scripts, potentially compromising developers' environments.
    Risk and Mitigation: The finding emphasizes the need for effective DevSecOps workflows and tooling to mitigate the impact of manifest confusion attacks. Developers should scan packages for anomalies and exploits rather than blindly trusting metadata.

Analysis and Implications:
The Manifest Confusion Attack underscores the importance of validating both manifest and bundle contents when downloading packages from open-source repositories. It highlights the need for robust DevSecOps practices and tools to detect and prevent the inclusion of vulnerable or malicious files in software supply chains.
    Tactic: Defense Evasion
        Technique: Obfuscated Files or Information (T1027)
            Description: The manifest confusion attack can potentially involve hiding malware or malicious scripts within package dependencies, evading detection by obfuscating files or information.

    Tactic: Initial Access
        Technique: Supply Chain Compromise (T1195)
            Description: The manifest confusion attack can be utilized as a technique for compromising the software supply chain, allowing threat actors to introduce malicious code or dependencies into the development environment.

    Tactic: Persistence
        Technique: Registry Run Keys / Startup Folder (T1060)
            Description: If the manifest confusion attack successfully injects and executes arbitrary scripts during installation, it can lead to persistence by modifying the registry run keys or the startup folder to maintain access and execute malicious code upon system boot.

    Tactic: Impact
        Technique: Software Packing (T1045)
            Description: The potential inclusion of malware or arbitrary scripts within package dependencies can lead to the impact of systems, applications, or networks, particularly if the malicious code is executed during installation.

	· Ghostscript bug could allow rogue documents to run system commands
			o https://nakedsecurity.sophos.com/2023/07/04/ghostscript-bug-could-allow-rogue-documents-to-run-system-commands/
Article Summary:
The article discusses a vulnerability in Ghostscript, an open-source implementation of Adobe's PostScript and PDF file format. The bug, known as CVE-2023-36664, allowed rogue documents to execute system commands by exploiting the handling of filenames for output, specifically when outputting data into a pipe. By sending specially-formatted filenames, attackers could trick Ghostscript into running arbitrary commands on the victim's computer.

Key Points:

    Vulnerability: Ghostscript had a bug (CVE-2023-36664) that enabled the execution of system commands by manipulating filenames and sending output to a pipe instead of a regular file.
    Pipe-Based Output: Ghostscript's handling of filenames allowed for sending output to pipes, which are system objects that facilitate data communication between programs.
    Exploitation Potential: Attackers could utilize specially-formatted filenames (e.g., starting with %pipe% or |) to execute arbitrary commands on the victim's computer, potentially leading to unauthorized access or further compromise.
    Patching Process: The Ghostscript team introduced patches to address the vulnerability, initially detecting %pipe... at the start of filenames and later accommodating both the pipe character (|) and %pipe... prefix.

Analysis and Implications:
The Ghostscript vulnerability highlights the importance of secure handling of filenames and output mechanisms. Attackers could leverage this bug to execute unauthorized commands, potentially leading to system compromise or data exfiltration. Patching and staying updated with the latest version of Ghostscript are crucial to mitigate this vulnerability.

Recommendations:

    Update Ghostscript: Ensure that standalone Ghostscript packages managed by Unix, Linux distros, or package managers (e.g., Homebrew on macOS) are updated to the latest version to address the vulnerability.
    Vendor Communication: If using software with a bundled version of Ghostscript, reach out to the software provider for guidance on upgrading the Ghostscript component to a patched version.
    Thorough Vulnerability Assessment: As a programmer, don't limit vulnerability mitigation to the immediate bug fix. Consider other potential coding vulnerabilities and explore techniques that attackers could utilize to exploit known bugs.

 
(U) Vulnerabilities/Exploits:
	· Firefox 115 Patches High-Severity Use-After-Free Vulnerabilities
			o https://www.securityweek.com/firefox-115-patches-high-severity-use-after-free-vulnerabilities/
Article Summary:
The article announces the release of Firefox 115, which includes patches for a dozen vulnerabilities, including two high-severity use-after-free bugs. The first vulnerability (CVE-2023-37201) is a use-after-free flaw in WebRTC certificate generation, allowing for a potential use-after-free condition during the creation of a WebRTC connection over HTTPS. The second vulnerability (CVE-2023-37202) involves a potential use-after-free issue from compartment mismatch in the SpiderMonkey JavaScript and WebAssembly engine.

Key Points:

    Vulnerabilities Patched: Firefox 115 addresses a total of twelve vulnerabilities, including:
        Two high-severity use-after-free bugs (CVE-2023-37201 and CVE-2023-37202).
        High-severity memory safety bugs (CVE-2023-37211 and CVE-2023-37212).
        Eight medium-severity vulnerabilities with various implications.
    WebRTC Flaw (CVE-2023-37201): A use-after-free condition in WebRTC certificate generation when creating a WebRTC connection over HTTPS.
    SpiderMonkey Flaw (CVE-2023-37202): A use-after-free issue caused by compartment mismatch in the SpiderMonkey JavaScript and WebAssembly engine.
    Additional Vulnerabilities: The update also addresses high-severity memory safety bugs and medium-severity vulnerabilities related to malicious sites, arbitrary code execution, spoofing attacks, URL spoofing, and more.

Analysis and Implications:
The patched vulnerabilities in Firefox 115, especially the high-severity use-after-free bugs, highlight the importance of keeping web browsers up-to-date to mitigate potential security risks. Exploiting these vulnerabilities could lead to arbitrary code execution, data exposure, or compromise of user interactions with malicious sites. It is recommended to promptly apply the latest Firefox updates to ensure a secure browsing experience.
	· Super Socializer 7.13.52 Reflected XSS
			o https://cxsecurity.com/issue/WLB-2023070007
Article Summary:
The provided code snippet demonstrates an exploit for a reflected cross-site scripting (XSS) vulnerability in the Super Socializer WordPress plugin version 7.13.52. The vulnerability allows an attacker to inject and execute arbitrary JavaScript code in a vulnerable parameter. By leveraging the exploit, an attacker can trigger an alert with the document's domain in the victim's browser. The code snippet demonstrates the exploitation process by sending a crafted POST request to the vulnerable AJAX endpoint.
 
(U) #StopRansmware:
	· No reporting identified

(U) Breaches:
	· Microsoft denies massive user data breach - here's all we know so far
			o https://www.techradar.com/pro/microsoft-denies-massive-user-data-breach-heres-all-we-know-so-far

Article Summary:
The article reports that the cybercrime group Anonymous Sudan claims to have stolen a large database containing over 30 million Microsoft accounts, emails, and passwords. They are offering to sell this data for $50,000, asserting that they successfully hacked Microsoft. However, Microsoft denies the breach and states that the data is likely aggregated from various sources. Anonymous Sudan previously conducted successful attacks against Microsoft, targeting Outlook, SharePoint Online, OneDrive for Business, and Azure services. Microsoft suffered disruptions due to distributed denial-of-service (DDoS) attacks, but no evidence suggests that customer data was compromised. Anonymous Sudan, described as a hacktivist group with pro-Russia leanings, continues to make politically motivated attacks against government entities.

Key Points:

    Claimed Breach: Anonymous Sudan alleges the successful hacking of Microsoft, stealing a large database of Microsoft accounts, emails, and passwords.
    Sale of Data: The group offers to sell the stolen data for $50,000, providing a data sample as proof.
    Microsoft's Denial: Microsoft categorically denies the breach and asserts that the data is aggregated from different sources, stating that customer data remains uncompromised.
    Previous Attacks: Anonymous Sudan previously targeted Outlook, SharePoint Online, OneDrive for Business, and Azure services with DDoS attacks, causing disruptions.
    Political Motivation: Anonymous Sudan is a hacktivist group with pro-Russia leanings, engaging in politically motivated attacks against government entities.

Analysis and Implications:
While Anonymous Sudan claims to have breached Microsoft and stolen a significant amount of user data, Microsoft denies the legitimacy of the claim and attributes the data to an aggregation from other sources. It is crucial to verify the authenticity of the data provided by Anonymous Sudan, as it may come from previous breaches or third-party sources. Microsoft's prompt denial and assertion of data security are reassuring, but further investigation may be necessary if concrete evidence emerges. The politically motivated nature of Anonymous Sudan's attacks against government entities adds complexity to their activities and requires continued monitoring. there are no specific mentions of Tactics, Techniques, and Procedures (TTPs) employed by the threat actor or detailed technical methods used in the attacks or data breach. The article primarily focuses on the claims made by Anonymous Sudan, Microsoft's denial of a breach, and the political motivations behind the attacks.
	· Russians Hackers May Have Breached NHS Trust With 2.5 Million Patients
			o https://www.cysecurity.news/2023/07/russians-hackers-may-have-breached-nhs.html
Summary:
The CTI article reports on a suspected cyber attack targeting Barts Health NHS Trust, a prominent NHS trust serving approximately 2.5 million patients. The attack is attributed to a group known as BlackCat or ALPHV, notorious for their ransomware attacks. The group claims to have unauthorized access to sensitive employee information, including CVs, financial data, and potentially confidential documents related to individuals' identities. The exact nature of the information and whether patient data is involved remains uncertain. The trust has committed to conducting a thorough investigation into the claims. The National Cyber Security Centre (NCSC) is actively involved in the ongoing investigation.

Key Points:

    Targeted Organization: Barts Health NHS Trust, serving 2.5 million patients.
    Attacker Group: BlackCat or ALPHV, known for advanced malware operations.
    Potential Compromised Information: Sensitive employee data, financial details, and potentially confidential documents.
    Uncertain Impact on Patient Data: It is unclear if patient data is involved or if the trust's systems were infiltrated.
    Thorough Investigation: Barts Health NHS Trust has expressed a commitment to conducting a comprehensive investigation.
    Involvement of NCSC: The National Cyber Security Centre (NCSC) is actively participating in the investigation.

Conclusion:
The suspected cyber attack on Barts Health NHS Trust by the BlackCat or ALPHV group raises concerns about the potential exposure of sensitive information. The trust's commitment to investigating the incident and the involvement of the NCSC demonstrate a proactive approach to address the situation. Further analysis and monitoring are necessary to determine the full extent of the breach and any associated TTPs used by the attacker group.
