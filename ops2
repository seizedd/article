(U//FOUO) TLP:AMBER+STRICT Crowdstrike Threat Reporting: 
•	(U//FOUO) TLP:AMBER+STRICT CSIT-23177-Technical Overview of OCEAN BUFFALO KamiKakaBot InstallationChain
o	(U//FOUO) TLP:AMBER+STRICT https://falcon.laggar.gcw.crowdstrike.com/api2/intel/reports/entities/report-files/v1?ids=212236
•	(U//FOUO) TLP:AMBER+STRICT CSIT-23182-Technical Analysis of Rhadamanthys Loader -A Series of -Evasive Shellcode Stages Leads to a Steganography Downloader
o	(U//FOUO) TLP:AMBER+STRICT https://falcon.laggar.gcw.crowdstrike.com/api2/intel/reports/entities/report-files/v1?ids=212227
 
==================================
 
(U) USCIS, DHS, other DHS Components, Adjacent Agencies(DoJ, DoS, etc.):
•	No reporting identified

(U) Threat Groups:
•	Who is 8BASE? A deep dive into the “newish” ransom gang
o	https://cybernews.com/security/8base-new-ransomware-group-explained/
The article provides an overview of a ransomware group called 8BASE, which has gained attention for its high victim count and contribution to the rise in worldwide ransomware attacks. While the article does not specifically list TTPs (Tactics, Techniques, and Procedures) or IOCs (Indicators of Compromise), it mentions that 8BASE uses a double extortion method, targets smaller businesses, and shows similarities to another group called RansomHouse.


(U) Tactics/Techniques/Procedures:
•	Process Mockingjay: Echoing RWX In Userland To Achieve Code Execution
o	https://www.securityjoes.com/post/process-mockingjay-echoing-rwx-in-userland-to-achieve-code-execution
The article discusses a new process injection technique called "Mockingjay" developed by a research team. Process injection is a method used by attackers to insert and execute code within the memory space of a process. The technique involves leveraging vulnerable DLLs and copying code to the appropriate section to inject and execute code without relying on monitored Windows APIs. The Mockingjay technique eliminates the need for memory allocation, permission setting, or starting a thread in the targeted process. By utilizing existing RWX (Read-Write-Execute) sections in DLLs, the technique aims to bypass detection by security software like EDRs (Endpoint Detection and Response). Additionally, it describes the process of finding a vulnerable DLL and the injection mechanisms employed by the Mockingjay technique.
    Mockingjay Technique (New Technique Developed):
        Tactic: Defense Evasion
        Sub-technique: Code Injection (T1055)
        Description: The article introduces a new process injection technique called "Mockingjay" that involves leveraging a vulnerable DLL with default RWX sections to inject code into Windows processes. It aims to bypass security controls, such as EDRs, by avoiding the use of monitored Windows APIs typically associated with process injection techniques.

    Classic DLL Injection:
        Tactic: Defense Evasion
        Sub-technique: Dynamic-link Library Injection (T1055.001)
        Description: The article mentions the classic DLL injection technique, where a malicious DLL is injected into the memory space of another process by allocating memory, writing the DLL into that memory, and creating a thread to start its execution.

    PE Injection:
        Tactic: Defense Evasion
        Sub-technique: Process Hollowing (T1055.012)
        Description: The article refers to PE injection as a technique where an entire Portable Executable (PE) file is mapped into the memory space of a running process. It involves allocating a new memory section within the target process, mapping the payload onto this section, and creating a remote thread for execution.

    Thread Execution Hijacking:
        Tactic: Defense Evasion
        Sub-technique: Thread Execution Hijacking (T1055.014)
        Description: The article mentions thread execution hijacking as a technique used to gain control of the execution flow within a process by redirecting the execution of a target thread to arbitrary code. It allows manipulation of the process's behavior without creating a new process or modifying the underlying code.

    Mapping Injection:
        Tactic: Defense Evasion
        Sub-technique: DLL Search Order Hijacking (T1038.004)
        Description: The article discusses mapping injection, which utilizes the NtMapViewOfSection function to map malicious code into the target process from an existing section controlled by the attacker. This technique bypasses the explicit allocation of RWX sections and avoids separate payload content copying.

•	New ongoing campaign targets npm ecosystem with unique execution chain
o	https://thehackernews.com/2023/06/new-ongoing-campaign-targets-npm.html
The article discusses a ongoing campnaign that has discovered targeting the npm ecosystem, employing a unique execution chain to deliver an unknown payload to targeted systems. The order of installation is crucial for the success of the attack, as the first package stores a token locally, retrieved from a remote server. The second package passes this token to acquire a second script, which is executed if it meets certain conditions. he identity of the threat actor remains unknown. The article does not explicitly mention any specific TTPs associated with the discovered malicious packages on PyPI repository. It mainly focuses on the existence of the malicious packages, their potential impact, and the ongoing threat to open source software registries like PyPI and npm.

•	Fileless attacks surge as cybercriminals evade cloud security defenses 
o	https://www.csoonline.com/article/643356/fileless-attacks-surge-as-cybercriminals-evade-cloud-security-defenses.html
The article discusses the rise in fileless or memory-based attacks over the past year. From an overview, it briefly highlights the stats of the techniques used by threat actors to conceal their campaigns, such as masquerading techniques, obfuscated files, and memory resident malware. 
    Defense Evasion (Tactic):
        Masquerading (Sub-technique)
        Obfuscated Files or Information (Sub-technique)
        Memory Resident Malware (Sub-technique)

    Initial Access (Tactic):
        Exploit Public-Facing Application (Sub-technique)

    Persistence (Tactic):
        Package Planting (Sub-technique)

    Discovery (Tactic):
        Software Discovery (Sub-technique)
        Exploit Public-Facing Application (Sub-technique)

    Collection (Tactic):
        Collection of Information (Sub-technique)

    Command and Control (Tactic):
        Commonly Used Port (Sub-technique)

•	Detecting popular Cobalt Strike Malleable C2 profile techniques
o	https://unit42.paloaltonetworks.com/cobalt-strike-malleable-c2/
The article discusses the findings of Unit 42 researchers regarding the detection of Cobalt Strike malleable C2 profile techniques. They identified two Cobalt Strike Team Server instances on the internet that hosted Beacon implants and enabled C2 functionality. the two tatics that teh article mentioned were:

Brand New Profile: Modification of Malleable C2 Profile: Attackers modify the Malleable C2 profile to create a custom and unique profile that can bypass security filters. The article provides a specific example of modifications made to the GET and POST transactions, including encrypted and encoded data placement, custom header additions, and double encoding techniques.

Case 2: Hiding Behind Known Good Services:

    Forging Host Headers: Attackers manipulate the host headers in HTTP requests to mimic traffic from benign services. By using well-known domain names in the host header, they attempt to evade network security inspection.

    Utilizing Public Cloud Services: Threat actors leverage public cloud platforms as their Command-and-Control (C2) servers. By utilizing the infrastructure of reputable cloud providers, they aim to avoid detection by IP reputation services and URL filtering products.

general TTPs related to C2: 
    Command and Control (C2) Communication (T1071):
        Sub-technique: Standard Application Layer Protocol (T1071.001)
        Sub-technique: Custom Command and Control Protocol (T1071.004)

    Remote File Copy (T1105):
        Sub-technique: Ingress Tool Transfer (T1105.002)

    User Execution (T1204):
        Sub-technique: Malicious File (T1204.002)
        Sub-technique: Scripting (T1204.004)

    Network Service Scanning (T1046):
        Sub-technique: Port Scanning (T1046.001)

    Data Encoding (T1132):
        Sub-technique: Standard Encoding (T1132.001)
        Sub-technique: Non-Standard Encoding (T1132.002)

    Obfuscated Files or Information (T1027):
        Sub-technique: Software Packing (T1027.001)
        Sub-technique: Obfuscated Files or Information (T1027.003)



•	Muddled Libra targets BPO sector with advanced social engineering
o	https://www.cysecurity.news/2023/06/muddled-libra-targets-bpo-sector-with.html
The article provides an overview of the tactics, IOCs, and novel techniques employed by the threat actor known as Muddled Libra in targeting the business process outsourcing (BPO) industry. Muddled Libra utilizes advanced social engineering tactics and the 0ktapus framework to launch persistent attacks against BPO systems. They employ smishing attacks, credential phishing, SIM swapping, and the 0ktapus phishing kit to gain initial access and establish long-term persistence.
    Social Engineering (Tactic: Initial Access): Muddled Libra employs advanced social engineering tactics to trick individuals and gain unauthorized entry into BPO systems.

    Phishing (Tactic: Initial Access): The threat actor utilizes smishing attacks and the 0ktapus phishing kit to target organizations and deceive individuals into providing sensitive information.

    SIM Swapping (Tactic: Initial Access): Muddled Libra utilizes SIM swapping techniques as part of their attack strategy to gain unauthorized access to telecom and BPO companies.

    Data Theft (Tactic: Exfiltration): Once inside the target network, the threat actor engages in data theft, extracting sensitive information from compromised systems.

    Persistence (Tactic: Persistence): Muddled Libra establishes long-term persistence within the compromised environments, allowing them to maintain continuous access and carry out subsequent attacks.

    Evasion (Tactic: Defense Evasion): The threat actor manipulates endpoint security solutions to avoid detection and evade security measures.

(U) Malware:
•	Andariel’s silly mistakes and a new malware family
o	https://securelist.com/lazarus-andariel-mistakes-and-easyrat/110119/ 
The article highlights the activities of the Lazarus group's subunit, Andariel, and their recent campaign involving new malware families. Andariel exploits the Log4j vulnerability to initiate infections and download further malware from the command-and-control (C2) server. Interestingly, the operators behind Andariel demonstrate inexperience through numerous mistakes and typos in their commands. They use off-the-shelf tools like Supremo remote desktop, Putty, and NTDSDumpEx for exploitation. The article also introduces a previously undocumented malware family called EarlyRat


•	New fast-developing infostealer pries open system information
o	https://www.fortinet.com/blog/threat-research/new-fast-developing-thirdeye-infostealer-pries-open-system-information?&web_view=true
The article discusses a newly discovered infostealer called "ThirdEye" and provides an overview of its behavior and evolution. ThirdEye is a relatively simple malware designed to gather system information from compromised machines, including BIOS data, file lists, running processes, and network information. The collected data is then sent to a command-and-control server.


•	Unveiling Wagner Group’s cyber-recruitment
o	https://blog.cyble.com/2023/06/27/unveiling-wagner-groups-cyber-recruitment/ 
The article discusses the discovery of a new ransomware variant called Wagner, which is a variant of the Chaos ransomware. Unlike typical ransomware that demands money, the Wagner ransomware urges users to join the PMC Wagner, a Russian paramilitary organization. The ransomware targets victims primarily within Russia and encrypts various file types, appending the ".Wagner" extension to the encrypted files. The ransomware also attempts to achieve persistence and privilege escalation by creating copies of itself and adding them to startup folders. The Wagner Group has not officially claimed responsibility for this ransomware strain.
Tactic   	Technique ID   	Technique Name   
Execution    	T1204   	User Execution   
Persistence	T1547    	Registry Run Keys / Startup Folder  
 
Discovery   	T1082 
T1083
T1057  	System Information Discovery 
File and Directory Discovery   
Process Discovery 
Impact  	T1486  
T1490	Data Encrypted for Impact  
Inhibit System Recovery


(U) Vulnerabilities/Exploits:
•	Nessus plugin flaw let attackers escalate the privileges
o	https://cybersecuritynews.com/nessus-plugin-flaw/ 
A vulnerability in a plugin used by the popular vulnerability scanning tool Nessus has been discovered, allowing attackers to escalate privileges. The flaw, identified as CVE-2023-2005, enables threat actors to place a binary on the filesystem in a specific location and exploit the plugin to gain elevated privileges. Tenable has released security patches to address the issue. This exploitation has a low success rate, however patches are still recommeneded. 


•	Multiple vulnerabilities in Google Chrome could allow for Arbitrary Code Execution
o	https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-google-chrome-could-allow-for-arbitrary-code-execution_2023-070
This advisory states that multiple vulnerabilities have been discovered in Google Chrome that could potentially allow for arbitrary code execution. These vulnerabilities include     
    Type Confusion in V8 (CVE-2023-3420)
    Use after free in Media (CVE-2023-3421)
    Use after free in Guest View (CVE-2023-3422) If successfully exploited, an attacker could execute arbitrary code, install programs, manipulate data, or create new accounts with full user rights. While there are currently no reports of these vulnerabilities being exploited in the wild.
Tactic: Initial Access (TA0001):
Technique: Drive-By Compromise (T1189):


(U) #StopRansmware:
•	Akira ransomware extends reach to Linux platform
o	https://blog.cyble.com/2023/06/28/akira-ransomware-extends-reach-to-linux-platform/
The newly identified ransomware group known as "Akira" has expanded its operations to target the Linux platform. Akira ransomware has already compromised 46 publicly disclosed victims, primarily located in the United States. The ransomware targets various sectors, including Education, Banking, Financial Services and Insurance (BFSI), Manufacturing, and Professional Services. The Linux variant of Akira ransomware is a 64-bit Linux Executable and Linkable Format (ELF) file. It utilizes specific parameters for execution, encrypts files using symmetric key algorithms (such as AES and DES), and adds the ".akira" extension to compromised files. The ransomware deposits a predefined ransom note onto the victim's system. 
Execution 	
T1204 	User Execution

Discovery   	
T1082 System Information Discovery
T1083	File and Directory Discovery

Impact  	
T1486 Data Encrypted for Impact 
T1490 Inhibit System Recovery

